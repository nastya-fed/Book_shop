[{"D:\\books_shop\\client\\src\\index.js":"1","D:\\books_shop\\client\\src\\store\\UserStore.js":"2","D:\\books_shop\\client\\src\\App.js":"3","D:\\books_shop\\client\\src\\store\\booksStore.js":"4","D:\\books_shop\\client\\src\\http\\userAPI.js":"5","D:\\books_shop\\client\\src\\components\\AppRouter.js":"6","D:\\books_shop\\client\\src\\components\\NavBar.js":"7","D:\\books_shop\\client\\src\\http\\index.js":"8","D:\\books_shop\\client\\src\\components\\BooksItem.js":"9","D:\\books_shop\\client\\src\\routes.js":"10","D:\\books_shop\\client\\src\\utils\\consts.js":"11","D:\\books_shop\\client\\src\\pages\\BooksPage.js":"12","D:\\books_shop\\client\\src\\pages\\Auth.js":"13","D:\\books_shop\\client\\src\\pages\\Basket.js":"14","D:\\books_shop\\client\\src\\pages\\Shop.js":"15","D:\\books_shop\\client\\src\\pages\\Admin.js":"16","D:\\books_shop\\client\\src\\components\\BooksList.js":"17","D:\\books_shop\\client\\src\\http\\booksAPI.js":"18","D:\\books_shop\\client\\src\\components\\Pages.js":"19","D:\\books_shop\\client\\src\\components\\BrandBar.js":"20","D:\\books_shop\\client\\src\\components\\TypeBar.js":"21","D:\\books_shop\\client\\src\\components\\modals\\CreateBooks.js":"22","D:\\books_shop\\client\\src\\components\\modals\\CreateType.js":"23","D:\\books_shop\\client\\src\\components\\modals\\CreateBrand.js":"24","D:\\books_shop\\client\\src\\components\\modals\\DeleteBook.js":"25"},{"size":445,"mtime":1640280585966,"results":"26","hashOfConfig":"27"},{"size":401,"mtime":1611985807000,"results":"28","hashOfConfig":"27"},{"size":1131,"mtime":1640358294727,"results":"29","hashOfConfig":"27"},{"size":1317,"mtime":1640280585796,"results":"30","hashOfConfig":"27"},{"size":708,"mtime":1640310374974,"results":"31","hashOfConfig":"27"},{"size":795,"mtime":1640281069231,"results":"32","hashOfConfig":"27"},{"size":2178,"mtime":1640590942623,"results":"33","hashOfConfig":"27"},{"size":407,"mtime":1611985807000,"results":"34","hashOfConfig":"27"},{"size":965,"mtime":1640305553103,"results":"35","hashOfConfig":"27"},{"size":769,"mtime":1640292083045,"results":"36","hashOfConfig":"27"},{"size":227,"mtime":1640280586550,"results":"37","hashOfConfig":"27"},{"size":3063,"mtime":1640594931466,"results":"38","hashOfConfig":"27"},{"size":3465,"mtime":1640310142112,"results":"39","hashOfConfig":"27"},{"size":1106,"mtime":1640303158221,"results":"40","hashOfConfig":"27"},{"size":1625,"mtime":1640296829699,"results":"41","hashOfConfig":"27"},{"size":2041,"mtime":1640594931616,"results":"42","hashOfConfig":"27"},{"size":479,"mtime":1640296370094,"results":"43","hashOfConfig":"27"},{"size":1304,"mtime":1640606185127,"results":"44","hashOfConfig":"27"},{"size":796,"mtime":1640280587018,"results":"45","hashOfConfig":"27"},{"size":755,"mtime":1640280586598,"results":"46","hashOfConfig":"27"},{"size":748,"mtime":1640280586745,"results":"47","hashOfConfig":"27"},{"size":6080,"mtime":1640591539661,"results":"48","hashOfConfig":"27"},{"size":1358,"mtime":1640575817805,"results":"49","hashOfConfig":"27"},{"size":1395,"mtime":1640575807281,"results":"50","hashOfConfig":"27"},{"size":1133,"mtime":1640594931690,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},"bl1ydt",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"55"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"107"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"55"},"D:\\books_shop\\client\\src\\index.js",["115"],"import React, {useState, createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport UserStore from \"./store/UserStore\";\nimport booksStore from \"./store/booksStore\";\n\nexport const Context = createContext(null)\n\nReactDOM.render(\n    <Context.Provider value={{\n        user: new UserStore(),\n        books: new booksStore(),\n    }}>\n        <App />\n    </Context.Provider>,\n  document.getElementById('root')\n);\n\n",["116","117"],"D:\\books_shop\\client\\src\\store\\UserStore.js",[],"D:\\books_shop\\client\\src\\App.js",["118"],"import React, {createContext, useContext, useEffect, useState} from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"./index\";\nimport {check} from \"./http/userAPI\";\nimport {Spinner} from \"react-bootstrap\";\n\n\n\nexport const userContext = createContext(null)\n\nconst App = observer(() => {\n    const {user} = useContext(Context)\n    const [loading, setLoading] = useState(true)\n    const [userAuth, setUserAuth] = useState({\n        id: 0,\n        isAuth: false\n    });\n\n\n\n    useEffect(() => {\n        check().then(data => {\n            user.setUser(true)\n            user.setIsAuth(true)\n        }).finally(() => setLoading(false))\n    }, [])\n\n    if (loading) {\n        return <Spinner animation={\"grow\"}/>\n    }\n\n\n    return (\n        <userContext.Provider value={{userAuth, setUserAuth}}>\n            <BrowserRouter>\n                <NavBar />\n                <AppRouter />\n            </BrowserRouter>\n        </userContext.Provider>\n    );\n});\n\nexport default App;\n","D:\\books_shop\\client\\src\\store\\booksStore.js",[],"D:\\books_shop\\client\\src\\http\\userAPI.js",[],"D:\\books_shop\\client\\src\\components\\AppRouter.js",[],"D:\\books_shop\\client\\src\\components\\NavBar.js",[],"D:\\books_shop\\client\\src\\http\\index.js",[],"D:\\books_shop\\client\\src\\components\\BooksItem.js",["119"],"import React from 'react';\nimport {Card, Col} from \"react-bootstrap\";\nimport Image from \"react-bootstrap/Image\";\nimport star from '../assets/star.png'\nimport {useHistory} from \"react-router-dom\"\nimport {books_ROUTE} from \"../utils/consts\";\n\nconst BooksItem = ({books,user}) => {\n    const history = useHistory()\n    return (\n        console.log(books.id),\n        <Col md={3} className={\"mt-3\"} onClick={() => history.push(books_ROUTE + '/' + books.id)}>\n            <Card style={{width: 150, cursor: 'pointer'}} border={\"light\"}>\n                <Image width={150} height={150} src={process.env.REACT_APP_API_URL + books.img}/>\n                <div className=\"text-black-50 mt-1 d-flex justify-content-between align-items-center\">\n                </div>\n                <div>\n                    <b> {books.name}</b>\n                </div>\n                <div>{books.price+' руб.'}</div>\n            </Card>\n        </Col>\n    );\n};\n\nexport default BooksItem;\n","D:\\books_shop\\client\\src\\routes.js",[],"D:\\books_shop\\client\\src\\utils\\consts.js",[],"D:\\books_shop\\client\\src\\pages\\BooksPage.js",["120","121","122","123","124","125"],"import React, {useContext, useEffect, useState} from 'react';\nimport {Button, Card, Col, Container, Image, Row} from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport {useParams} from 'react-router-dom'\nimport {fetchOnebooks} from \"../http/booksAPI\";\nimport {useHistory} from 'react-router-dom'\nimport axios from \"axios\";\nimport {Context} from \"../index\";\n\n\nconst BooksPage = () => {\n    const history = useHistory()\n    const {user} = useContext(Context)\n    const [books, setbooks] = useState({info: []})\n\n    const [typeVisible, setTypeVisible] = useState(false)\n    const {id} = useParams()\n\n    /* const [BasketVisible, setBasketVisible] = useState(false)*/\n    useEffect(() => {\n        fetchOnebooks(id).then(data => setbooks(data))\n        console.log('books: ', id)\n    }, [])\n\nconst qw=(userId, booksId)=>{\n        console.log(userId);\n        axios.post(`http://localhost:5000/api/booksId`,\n            {\"basketId\": id, \"booksId\": booksId}\n        ).then(()=>{alert(\"Товар добавлен в корзину\")})\n}\n// const rt=(booksId)=>{\n//         console.log(booksId);\n//         axios.delete(`http://localhost:5000/api/books/`+booksId).then(()=>{alert(\"Удалить\")})\n//     }\n\n    return (\n        <Container className=\"mt-3\">\n            <Row>\n                <Col md={4}>\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + books.img}/>\n                </Col>\n                <Col md={4}>\n                    <Row className=\"d-flex flex-column align-items-center\">\n                        <h2>{books.name}</h2>\n\n                    </Row>\n                </Col>\n\n                <Col md={4}>\n                    <Card\n                        className=\"d-flex flex-column align-items-center justify-content-around\"\n                        style={{width: 300, height: 300, fontSize: 32, border: '5px solid lightgray'}}\n                    >\n                        <h3> {books.price} руб.</h3>\n                        <Button\n                            variant={\"outline-dark\"}\n                            onClick={()=>{qw(2, books.id)}}\n\n                        >\n                            Добавить в корзину\n                        </Button>\n                        {/*<Button*/}\n                        {/*    variant={\"outline-dark\"}*/}\n                        {/*    onClick={()=>{rt( books.id)}}*/}\n\n                        {/*>*/}\n                        {/*    Удалить*/}\n                        {/*</Button>*/}\n\n                    </Card>\n                </Col>\n            </Row>\n\n\n            <Row className=\"d-flex flex-column m-3\">\n                <h1>Характеристики</h1>\n                {books.info.map((info, index) =>\n                    <Row key={info.id} style={{background: index % 2 === 0 ? 'lightgray' : 'transparent', padding: 10}}>\n                        {info.title}: {info.description}\n                    </Row>\n                )}\n            </Row>\n\n        </Container>\n    );\n};\n\nexport default BooksPage;\n","D:\\books_shop\\client\\src\\pages\\Auth.js",["126"],"import React, {useContext, useState} from 'react';\nimport {Container, Form} from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport {NavLink, useLocation, useHistory} from \"react-router-dom\";\nimport {LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE} from \"../utils/consts\";\nimport {login, registration} from \"../http/userAPI\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {userContext} from \"../App\";\n\nconst Auth = observer(() => {\n    const {userAuth, setUserAuth} = useContext(userContext)\n    const {user} = useContext(Context)\n    const location = useLocation()\n    const history = useHistory()\n    const isLogin = location.pathname === LOGIN_ROUTE\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const click = async () => {\n        try {\n            let response;\n            if (isLogin) {\n                response = await login(email, password);\n                setUserAuth({id: response.id, isAuth: true})\n                user.setIsAuth(true)\n            } else {\n                response = await registration(email, password);\n                setUserAuth({id: response.id, isAuth: true})\n                user.setIsAuth(true)\n            }\n            // user.setUser(response.data);\n            // user.setIsAuth(true)\n            history.push(SHOP_ROUTE)\n        } catch (e) {\n            alert(e.response.data.message)\n        }\n\n    }\n\n\n\n    return (\n        <Container\n            className=\"d-flex justify-content-center align-items-center\"\n            style={{height: window.innerHeight - 54}}\n        >\n            <Card style={{width: 600}} className=\"p-5\">\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n                <Form className=\"d-flex flex-column\">\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш email...\"\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        placeholder=\"Введите ваш пароль...\"\n                        value={password}\n                        onChange={e => setPassword(e.target.value)}\n                        type=\"password\"\n                    />\n                    <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n                        {isLogin ?\n                            <div>\n                                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n                            </div>\n                            :\n                            <div>\n                                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n                            </div>\n                        }\n\n                        <Button\n                            variant={\"outline-success\"}\n                            onClick={click}\n                        >\n                            {isLogin ? 'Войти' : 'Регистрация'}\n                        </Button>\n                    </Row>\n\n                </Form>\n            </Card>\n        </Container>\n    );\n});\n\nexport default Auth;\n","D:\\books_shop\\client\\src\\pages\\Basket.js",["127","128","129"],"import React, {useContext, useEffect, useState} from 'react';\nimport Row from \"react-bootstrap/Row\";\n\nimport booksItem from \"../components/BooksItem\";\nimport {Context} from \"../index\";\n\nimport axios from \"axios\";\nimport {userContext} from \"../App\";\n\n\nconst Basket = () => {\n    const {user} = useContext(Context)\n    const {userAuth} = useContext(userContext)\n    const [isLoading, setIsLoading]=useState(false);\n    const [basketItems, setBasketItems] = useState([])\n\n    const ShowBasketItems = async ()=>{\n        console.log(userAuth.id)\n        await axios.get(`http://localhost:5000/api/booksId?userId=${userAuth.id}`)\n            .then((response)=>{setBasketItems(response.data); console.log((response.data))})\n            .catch((e)=>{alert(e)})\n        await setIsLoading(true);\n    }\n\n    useEffect(ShowBasketItems, [])\n\n    return (\n\n        isLoading\n        ?\n        <Row className=\"d-flex\">\n            {basketItems.map(books =>\n                <booksItem key={books.id} books={books.books}/>\n            )}\n\n        </Row>\n            :\n            <div/>\n    );\n}\nexport default Basket;\n\n\n","D:\\books_shop\\client\\src\\pages\\Shop.js",["130","131"],"import React, {useContext, useEffect} from 'react';\nimport {Container} from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport BooksList from \"../components/BooksList\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport {fetchBrands, fetchbookss, fetchTypes} from \"../http/booksAPI\";\nimport Pages from \"../components/Pages\";\nimport {userContext} from \"../App\";\n\nconst Shop = observer(() => {\n    const {books} = useContext(Context)\n    const {userAuth} = useContext(userContext)\n    console.log(userAuth)\n    useEffect(() => {\n        fetchTypes().then(data => books.setTypes(data))\n        fetchBrands().then(data => books.setBrands(data))\n\n        fetchbookss(null, null, 1, 2).then(data => {\n            books.setbookss(data.rows)\n            books.setTotalCount(data.count)\n        })\n    }, [])\n\n    useEffect(() => {\n        fetchbookss(books.selectedType.id, books.selectedBrand.id, books.page, 2).then(data => {\n            books.setbookss(data.rows)\n            books.setTotalCount(data.count)\n        })\n    }, [books.page, books.selectedType, books.selectedBrand,])\n\n    return (\n        <Container>\n            <Row className=\"mt-2\">\n                <Col md={3}>\n                    <TypeBar/>\n                </Col>\n                <Col md={9}>\n                    <BrandBar/>\n                    <BooksList/>\n                    <Pages/>\n                </Col>\n            </Row>\n        </Container>\n    );\n});\n\nexport default Shop;\n","D:\\books_shop\\client\\src\\pages\\Admin.js",[],"D:\\books_shop\\client\\src\\components\\BooksList.js",[],"D:\\books_shop\\client\\src\\http\\booksAPI.js",["132","133"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\nimport axios from \"axios\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\n\nexport const createbooks = async (books) => {\n    const {data} = await $authHost.post('api/books', books)  \n    return data\n}\n\n// export const DeleteBookById = (id) => {\n//     axios.delete(`http://localhost:5000/books`+id, {\n//             }).then((response) => {\n//         if (response.data.error){\n//             alert(response.data.error);\n//         }\n//         else alert(response.data);\n//     });\n// }\n\nexport const fetchbookss = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/books', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOnebooks = async (id) => {\n    const {data} = await $host.get('api/books/' + id)\n    return data\n}\n","D:\\books_shop\\client\\src\\components\\Pages.js",[],"D:\\books_shop\\client\\src\\components\\BrandBar.js",[],"D:\\books_shop\\client\\src\\components\\TypeBar.js",["134"],"import React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n    const {books} = useContext(Context)\n    return (\n        <ListGroup>\n            {books.types.map(type =>\n                <ListGroup.Item\n                    style={{cursor: 'pointer'}}\n                    active={type.id === books.selectedType.id}\n                    onClick={() => books.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;\n","D:\\books_shop\\client\\src\\components\\modals\\CreateBooks.js",["135","136"],"import React, {useContext, useEffect, useState} from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\nimport {Context} from \"../../index\";\nimport {createbooks, fetchBrands, fetchbookss, fetchTypes} from \"../../http/booksAPI\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CreateBook = observer(({show, onHide}) => {\n    const {books} = useContext(Context)\n    const [name, setName] = useState('')\n    const [price, setPrice] = useState(0)\n    const [file, setFile] = useState(null)\n    const [info, setInfo] = useState([])\n\n    useEffect(() => {\n        fetchTypes().then(data => books.setTypes(data))\n        fetchBrands().then(data => books.setBrands(data))\n    }, [])\n\n    const addInfo = () => {\n        setInfo([...info, {title: '', description: '', number: Date.now()}])\n    }\n    const removeInfo = (number) => {\n        setInfo(info.filter(i => i.number !== number))\n    }\n    const changeInfo = (key, value, number) => {\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i))\n    }\n\n    const selectFile = e => {\n        setFile(e.target.files[0])\n    }\n\n    const addbooks = () => {\n        const formData = new FormData()\n        formData.append('name', name)\n        formData.append('price', `${price}`)\n        formData.append('img', file)\n        formData.append('brandId', books.selectedBrand.id)\n        formData.append('typeId', books.selectedType.id)\n        formData.append('info', JSON.stringify(info))\n        createbooks(formData).then(data => onHide())\n    }\n\n    return (\n        <Modal\n            show={show}\n            onHide={onHide}\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    Добавить книгу\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Form>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{books.selectedType.name || \"Выберите жанр\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {books.types.map(type =>\n                                <Dropdown.Item\n                                    onClick={() => books.setSelectedType(type)}\n                                    key={type.id}\n                                >\n                                    {type.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Dropdown className=\"mt-2 mb-2\">\n                        <Dropdown.Toggle>{books.selectedBrand.name || \"Выберите издательство\"}</Dropdown.Toggle>\n                        <Dropdown.Menu>\n                            {books.brands.map(brand =>\n                                <Dropdown.Item\n                                    onClick={() => books.setSelectedBrand(brand)}\n                                    key={brand.id}\n                                >\n                                    {brand.name}\n                                </Dropdown.Item>\n                            )}\n                        </Dropdown.Menu>\n                    </Dropdown>\n                    <Form.Control\n                        value={name}\n                        onChange={e => setName(e.target.value)}\n                        className=\"mt-3\"\n                        placeholder=\"Введите название книги\"\n                    />\n                    <Form.Control\n                        value={price}\n                        onChange={e => setPrice(Number(e.target.value))}\n                        className=\"mt-3\"\n                        placeholder=\"Введите стоимость книги\"\n                        type=\"number\"\n                    />\n                    <Form.Control\n                        className=\"mt-3\"\n                        type=\"file\"\n                        onChange={selectFile}\n                    />\n                    <hr/>\n                    <Button\n                        variant={\"outline-dark\"}\n                        onClick={addInfo}\n                    >\n                        Добавить новое свойство\n                    </Button>\n                    {info.map(i =>\n                        <Row className=\"mt-4\" key={i.number}>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.title}\n                                    onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                                    placeholder=\"Введите название свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Form.Control\n                                    value={i.description}\n                                    onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                                    placeholder=\"Введите описание свойства\"\n                                />\n                            </Col>\n                            <Col md={4}>\n                                <Button\n                                    onClick={() => removeInfo(i.number)}\n                                    variant={\"outline-danger\"}\n                                >\n                                    Удалить\n                                </Button>\n                            </Col>\n                        </Row>\n                    )}\n                </Form>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n                <Button variant=\"outline-success\" onClick={addbooks}>Добавить</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default CreateBook;\n",["137","138"],"D:\\books_shop\\client\\src\\components\\modals\\CreateType.js",[],"D:\\books_shop\\client\\src\\components\\modals\\CreateBrand.js",[],"D:\\books_shop\\client\\src\\components\\modals\\DeleteBook.js",["139","140","141","142","143"],"// import React, {useEffect, useState} from \"react\";\r\n// import { useParams, useHistory } from 'react-router-dom'\r\n//\r\n// import {Button, Dropdown, Form, Row, Col} from \"react-bootstrap\";\r\n//\r\n//\r\n// import {DeleteBookById} from \"../../http/booksAPI\";\r\n//\r\n//\r\n// const DeleteBook = () => {\r\n//     let history = useHistory();\r\n//     let { id } = useParams();\r\n//\r\n//\r\n//     const DeleteBooks = async () => {\r\n//         try{\r\n//               await DeleteBookById(id)\r\n//             history.push('/id');\r\n//         }catch(e){\r\n//             alert('Возникла ошибка')\r\n//         }\r\n//     }\r\n//\r\n//\r\n//     return (\r\n//         <div className='deletebook'>\r\n//             <Form.Control\r\n//                 value={id}\r\n//                 onChange={e => setBook(Number(e.target.value))}\r\n//                 className=\"mt-3\"\r\n//                 placeholder=\"Введите стоимость книги\"\r\n//                 type=\"number\"\r\n//             />\r\n//             <Button variant=\"danger\" onClick={DeleteBooks}> Удалить </Button>\r\n//         </div>\r\n//     );\r\n// }\r\n//\r\n// export default DeleteBook;",{"ruleId":"144","severity":1,"message":"145","line":1,"column":16,"nodeType":"146","messageId":"147","endLine":1,"endColumn":24},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":29,"column":8,"nodeType":"154","endLine":29,"endColumn":10,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"156","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":12},{"ruleId":"144","severity":1,"message":"157","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":15},{"ruleId":"144","severity":1,"message":"158","line":12,"column":11,"nodeType":"146","messageId":"147","endLine":12,"endColumn":18},{"ruleId":"144","severity":1,"message":"159","line":13,"column":12,"nodeType":"146","messageId":"147","endLine":13,"endColumn":16},{"ruleId":"144","severity":1,"message":"160","line":16,"column":12,"nodeType":"146","messageId":"147","endLine":16,"endColumn":23},{"ruleId":"144","severity":1,"message":"161","line":16,"column":25,"nodeType":"146","messageId":"147","endLine":16,"endColumn":39},{"ruleId":"152","severity":1,"message":"162","line":23,"column":8,"nodeType":"154","endLine":23,"endColumn":10,"suggestions":"163"},{"ruleId":"144","severity":1,"message":"164","line":14,"column":12,"nodeType":"146","messageId":"147","endLine":14,"endColumn":20},{"ruleId":"144","severity":1,"message":"159","line":12,"column":12,"nodeType":"146","messageId":"147","endLine":12,"endColumn":16},{"ruleId":"152","severity":1,"message":"165","line":17,"column":29,"nodeType":"166","endLine":23,"endColumn":6},{"ruleId":"152","severity":1,"message":"167","line":25,"column":32,"nodeType":"154","endLine":25,"endColumn":34,"suggestions":"168"},{"ruleId":"152","severity":1,"message":"169","line":26,"column":8,"nodeType":"154","endLine":26,"endColumn":10,"suggestions":"170"},{"ruleId":"152","severity":1,"message":"169","line":33,"column":8,"nodeType":"154","endLine":33,"endColumn":62,"suggestions":"171"},{"ruleId":"144","severity":1,"message":"172","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":18},{"ruleId":"144","severity":1,"message":"173","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":13},{"ruleId":"144","severity":1,"message":"174","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":11},{"ruleId":"144","severity":1,"message":"175","line":5,"column":35,"nodeType":"146","messageId":"147","endLine":5,"endColumn":46},{"ruleId":"152","severity":1,"message":"169","line":18,"column":8,"nodeType":"154","endLine":18,"endColumn":10,"suggestions":"176"},{"ruleId":"148","replacedBy":"177"},{"ruleId":"150","replacedBy":"178"},{"ruleId":"144","severity":1,"message":"179","line":1,"column":16,"nodeType":"146","messageId":"147","endLine":1,"endColumn":25},{"ruleId":"144","severity":1,"message":"145","line":1,"column":27,"nodeType":"146","messageId":"147","endLine":1,"endColumn":35},{"ruleId":"144","severity":1,"message":"180","line":4,"column":17,"nodeType":"146","messageId":"147","endLine":4,"endColumn":25},{"ruleId":"144","severity":1,"message":"181","line":4,"column":33,"nodeType":"146","messageId":"147","endLine":4,"endColumn":36},{"ruleId":"144","severity":1,"message":"174","line":4,"column":38,"nodeType":"146","messageId":"147","endLine":4,"endColumn":41},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'star' is defined but never used.","'bigStar' is defined but never used.","'history' is assigned a value but never used.","'user' is assigned a value but never used.","'typeVisible' is assigned a value but never used.","'setTypeVisible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["185"],"'userAuth' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'userAuth.id'. Either include it or remove the dependency array.",["186"],"React Hook useEffect has a missing dependency: 'books'. Either include it or remove the dependency array.",["187"],["188"],"'jwt_decode' is defined but never used.","'axios' is defined but never used.","'Col' is defined but never used.","'fetchbookss' is defined but never used.",["189"],["182"],["183"],"'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"196","fix":"200"},"Update the dependencies array to be: [user]",{"range":"201","text":"202"},"Update the dependencies array to be: [id]",{"range":"203","text":"204"},"Update the dependencies array to be: [userAuth.id]",{"range":"205","text":"206"},"Update the dependencies array to be: [books]",{"range":"207","text":"208"},"Update the dependencies array to be: [books.page, books.selectedType, books.selectedBrand, books]",{"range":"209","text":"210"},{"range":"211","text":"208"},[800,802],"[user]",[802,804],"[id]",[826,828],"[userAuth.id]",[973,975],"[books]",[1198,1252],"[books.page, books.selectedType, books.selectedBrand, books]",[739,741]]